<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.loginresigtertemplate.mapper.CardDao">
  <resultMap id="BaseResultMap" type="com.example.loginresigtertemplate.daomain.Card">
    <id column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="jwt_token" jdbcType="VARCHAR" property="jwtToken" />
    <result column="jwt_expiry" jdbcType="TIMESTAMP" property="jwtExpiry" />
  </resultMap>
  <sql id="Base_Column_List">
    admin_id, username, `password`, salt, created_at, jwt_token, jwt_expiry
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.loginresigtertemplate.daomain.Card">
    insert into admin (admin_id, username, `password`, 
      salt, created_at, jwt_token, 
      jwt_expiry)
    values (#{adminId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{jwtToken,jdbcType=VARCHAR}, 
      #{jwtExpiry,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.loginresigtertemplate.daomain.Card">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="jwtToken != null">
        jwt_token,
      </if>
      <if test="jwtExpiry != null">
        jwt_expiry,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="jwtToken != null">
        #{jwtToken,jdbcType=VARCHAR},
      </if>
      <if test="jwtExpiry != null">
        #{jwtExpiry,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.loginresigtertemplate.daomain.Card">
    update admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="jwtToken != null">
        jwt_token = #{jwtToken,jdbcType=VARCHAR},
      </if>
      <if test="jwtExpiry != null">
        jwt_expiry = #{jwtExpiry,jdbcType=TIMESTAMP},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.loginresigtertemplate.daomain.Card">
    update admin
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      jwt_token = #{jwtToken,jdbcType=VARCHAR},
      jwt_expiry = #{jwtExpiry,jdbcType=TIMESTAMP}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>